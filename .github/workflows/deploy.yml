name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push OverwatchQueueNotifier
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/overwatchqueuenotifier:latest
          build-args:
            DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
            DISCORD_INFORMATION_CHANNEL_ID=${{ secrets.DISCORD_INFO_CHANNEL_ID }}

      - name: SSH into VPS and Start OQN Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/OverwatchQueueNotifier
            IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/overwatchqueuenotifier:latest"
            
            # Stop and remove all containers using the image
            docker ps -a --filter ancestor="$IMAGE_NAME" --format "{{ '{{' }}.ID{{ '}}' }}" | xargs -r docker stop | xargs -r docker rm
            
            # Remove the old image
            docker rmi "$IMAGE_NAME" || true

            # Pull the latest image
            docker pull "$IMAGE_NAME"

            # Run the new container
            docker run -d -p 60650:60650 \
              -e DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }}" \
              -e DISCORD_INFORMATION_CHANNEL_ID="${{ secrets.DISCORD_INFO_CHANNEL_ID }}" \
              "$IMAGE_NAME"

      - name: Build and push OverwatchNotifier API
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/overwatchnotifier-api:latest
          context: ./tools
          file: ./tools/Dockerfile-api

      - name: SSH into VPS and Start ON API Docker Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/OverwatchQueueNotifier/tools
            IMAGE_NAME_API="${{ secrets.DOCKER_USERNAME }}/overwatchnotifier-api:latest"
            
            # Stop and remove all containers using the API image
            docker ps -a --filter ancestor="$IMAGE_NAME_API" --format "{{ '{{' }}.ID{{ '}}' }}" | xargs -r docker stop | xargs -r docker rm
            
            # Remove the old API image
            docker rmi "$IMAGE_NAME_API" || true
      
            # Pull the latest API image
            docker pull "$IMAGE_NAME_API"
      
            # Run the new API container
            docker run -d -p 8080:8080 \
              "$IMAGE_NAME_API"